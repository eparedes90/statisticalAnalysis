vacuno + porcino + ipc + ingreso, data =  data, type = "Rec-CUSUM")
plot(cusum)
library(tidyverse)
library(readxl)
library(tseries)
library(ggplot2)
library(stargazer)
library(xtable)
library(AER)
library(dynlm)
library(scales)
library(quantmod)
library(urca)
library(tsoutliers)
library(strucchange)
library(broom)
library(skedastic)
library(ggfortify)
library(tseries)
theme_set(theme_classic())
theme_set(theme_bw())
options(scipen = 999)
data <- readRDS("forAnalysis/dataClean.Rdata")
### analysis
rm(list = ls())
library(ggplot2)
library(lmtest)
library(stargazer)
setwd("E:/Asesorías de tesis/Economía/Asociatividad y servicios financieros")
data <- readRDS("forAnalysis/data2.Rdata")
#limitar a los pequeños y medianos agricultores (menos de 50ha)
data <- data[data$P104_SUP_ha<=50, ]
#solo creditos formales
table(data$credFormal)
class(data$credFormal)
data <- data[!data$credFormal == 2, ]
#analisis descriptivo
str(data)
table(data$P102_1)
#100% utilizan sus tierras para agricultura
table(data$P102_2)
19224/25364
#75.79% utilizan sus tierras para un fin agropecuario
table(data$P102_3)
#Todos realizaron alguna actividad sea agrícola o pecuaria
summary(data$P104_SUP_ha)
summary(data$prop)
table(data$P901)
data[data == "No"] <- 0
data[data == "S�"] <- 1
table(data$P1109A)
#P15 idioma
#
#P103 :
#P104_SUP_ha: extensión
#P1109A: ¿USUALMENTE, DURANTE EL AÑO, ADEMAS DE TRABAJAR EN SUS PARCELAS O CHACRAS O EN LA CRIANZA DE SUS ANIMALES REALIZA OTRA ACTIVIDAD PARA CONSEGUIR INGRESOS?
#
numeric <- colnames(data[, c()])
colnames(data)
str(data)
#P15 idioma
#
#P103 :
#P104_SUP_ha: extensión
#P1109A: ¿USUALMENTE, DURANTE EL AÑO, ADEMAS DE TRABAJAR EN SUS PARCELAS O CHACRAS O EN LA CRIANZA DE SUS ANIMALES REALIZA OTRA ACTIVIDAD PARA CONSEGUIR INGRESOS?
#
table(data$DOMINIO)
#P15 idioma
#
#P103 :
#P104_SUP_ha: extensión
#P1109A: ¿USUALMENTE, DURANTE EL AÑO, ADEMAS DE TRABAJAR EN SUS PARCELAS O CHACRAS O EN LA CRIANZA DE SUS ANIMALES REALIZA OTRA ACTIVIDAD PARA CONSEGUIR INGRESOS?
#
table(data$101A)
#P15 idioma
#
#P103 :
#P104_SUP_ha: extensión
#P1109A: ¿USUALMENTE, DURANTE EL AÑO, ADEMAS DE TRABAJAR EN SUS PARCELAS O CHACRAS O EN LA CRIANZA DE SUS ANIMALES REALIZA OTRA ACTIVIDAD PARA CONSEGUIR INGRESOS?
#
table(data$P101A)
data[, ] <- apply(data[, ], 2, function(x) as.factor(x))
str(data)
numeric <- colnames(data[, c("P101", "P104_SUP_ha")])
#as numeric
data[, numeric] <- apply(data[, numeric], 2, function(x) as.factor(x))
class(table(data$P1109A))
table(data$P1109A)
#analisis descriptivo
str(data)
### analysis
rm(list = ls())
library(ggplot2)
library(lmtest)
library(stargazer)
setwd("E:/Asesorías de tesis/Economía/Asociatividad y servicios financieros")
data <- readRDS("forAnalysis/data2.Rdata")
#as factors
data[, ] <- apply(data[, ], 2, function(x) as.factor(x))
#as numeric
numeric <- colnames(data[, c("P101", "P104_SUP_ha")])
data[, numeric] <- apply(data[, numeric], 2, function(x) as.factor(x))
#limitar a los pequeños y medianos agricultores (menos de 50ha)
data <- data[data$P104_SUP_ha<=50, ]
#solo creditos formales
table(data$credFormal)
class(data$credFormal)
#P15: idioma de la entrevista
ggplot(data, aes(P15)) +
geom_bar(stat = "count")
table(data$P15)
theme_set(theme_bw())
#P15: idioma de la entrevista
ggplot(data, aes(P15)) +
geom_bar(stat = "count")
#P15: idioma de la entrevista
ggplot(data, aes(P15)) +
geom_bar(stat = "count") +
ylab("")
prop.table(data$p15)
prop.table(data$P15)
prop.table(table(data$P15))
#analisis descriptivo
str(data)
#P101: años trabajando sus tierras
ggplot(data, aes(P101)) +
geom_boxplot()
#analisis descriptivo
str(data)
#as numeric
numeric <- colnames(data[, c("P101", "P104_SUP_ha")])
data[, numeric] <- apply(data[, numeric], 2, function(x) as.numeric(x))
#limitar a los pequeños y medianos agricultores (menos de 50ha)
data <- data[data$P104_SUP_ha<=50, ]
#solo creditos formales
data <- data[!data$credFormal == 2, ]
#analisis descriptivo
str(data)
#P15: idioma de la entrevista
ggplot(data, aes(P15)) +
geom_bar(stat = "count") +
ylab("")
table(data$P15)
prop.table(table(data$P15))
#P101: años trabajando sus tierras
ggplot(data, aes(P101)) +
geom_boxplot()
#limitar a los pequeños y medianos agricultores (menos de 50ha)
data <- data[data$P104_SUP_ha<=50, ]
#P101: años trabajando sus tierras
ggplot(data, aes(P101)) +
geom_boxplot()
table(data$P15, data$credFormal)
prop.table(data$P15, data$credFormal)
table(data$P15, data$credFormal)
prop.table(data$P15, data$credFormal)
prop.table(table(data$P15, data$credFormal))
#P15: idioma de la entrevista
ggplot(data, aes(credFormal, P15)) +
geom_bar(stat = "count") +
ylab("")
#P15: idioma de la entrevista
ggplot(data, aes(credFormal, P15)) +
geom_bar() +
ylab("")
#P15: idioma de la entrevista
ggplot(data, aes(credFormal, P15)) +
geom_bar() +
ylab("")
#P15: idioma de la entrevista
ggplot(data, aes(credFormal, P15)) +
geom_bar("count") +
ylab("")
#P15: idioma de la entrevista
ggplot(data, aes(P15, color = credFormal)) +
geom_bar("count") +
ylab("")
#P15: idioma de la entrevista
ggplot(data, aes(P15, fill = credFormal)) +
geom_bar(position = "dodge2") +
ylab("")
table(data$P15, data$credFormal)
prop.table(table(data$P15, data$credFormal))
table(data$P15, data$credFormal)
prop.table(table(data$P15, data$credFormal))
#P101: años trabajando sus tierras
ggplot(data, aes(P101, fill = credFormal)) +
geom_boxplot(position = "dodge2")
#P101: años trabajando sus tierras
ggplot(data, aes(credFormal, P101)) +
geom_boxplot()
#analisis descriptivo
str(data)
#P102
table(data$P102_1)
#100% utilizan sus tierras para agricultura
table(data$P102_2)
#100% utilizan sus tierras para agricultura
table(data$P102_2, data$credFormal)
prop.table(table(data$P102_2, data$credFormal))
#
table(data$P102_3)
table(data$P901)
#75.79% utilizan sus tierras para un fin agropecuario
table(data$P102_3, data$credFormal)
#100% utilizan sus tierras para agricultura
table(data$P102_2, data$credFormal)
#analisis descriptivo
str(data)
#P104_SUP_ha
ggplot(data, aes(P104_SUP_ha, color = credFormal)) +
geom_density()
#P104_SUP_ha
ggplot(data, aes(credFormal, P104_SUP_ha)) +
geom_boxplot()
#analisis descriptivo
str(data)
#prop
ggplot(data, aes(prop, fill = credFormal)) +
geom_bar()
#prop
ggplot(data, aes(prop, fill = credFormal)) +
geom_bar(position = "dodge")
#P104_SUP_ha
ggplot(data, aes(credFormal, P104_SUP_ha)) +
geom_boxplot()
ggsave(filename = "plots/P104_SUP_ha.png")
#prop
ggplot(data, aes(prop, fill = credFormal)) +
geom_bar(position = "dodge")
ggsave(filename = "plots/prop.png")
#prop
ggplot(data, aes(prop, fill = credFormal)) +
geom_bar(position = "dodge")+
ylab("")
ggsave(filename = "plots/prop.png")
knitr::opts_chunk$set(echo = FALSE, fig.height = 4, fig.width = 5, fig.align = "center")
library(pander)
library(ggplot2)
library(tidyr)
library(dplyr)
library(sandwich)
library(xtable)
theme_set(theme_bw())
options(scipen = 999)
data <- readRDS("forAnalysis/data2.Rdata")
data <- readRDS("forAnalysis/data2.Rdata")
getwd()
getwd()
data <- readRDS("forAnalysis/data2.Rdata")
colnames(data)
data <- data[, c(17:44)]
data <- data[, c(17:28, 40:44)]
library(pander)
library(ggplot2)
library(tidyr)
library(dplyr)
library(sandwich)
library(xtable)
theme_set(theme_bw())
options(scipen = 999)
data <- readRDS("forAnalysis/data2.Rdata")
#as factors
data[, ] <- apply(data[, ], 2, function(x) as.factor(x))
#as numeric
numeric <- colnames(data[, c("P101", "P104_SUP_ha")])
data[, numeric] <- apply(data[, numeric], 2, function(x) as.numeric(x))
#limitar a los peque??os y medianos agricultores (menos de 50ha)
data <- data[data$P104_SUP_ha<=50, ]
colnames(data)
data <- data[, c(17:28, 40:44)]
str(data)
#name of the dependent variable
dep <- colnames(data)[length(data)]
#symbol of dependent variable to put into a function as an object
dependent <- sym(dep)
for (i in 1:(length(data)-1)) {
if (class(data[, i]) == "character"){
#each independent variable will be call a
a <- colnames(data)[i]
#create symbols to use in the ggplots
column <- sym(a)
#create first level header for each independent variable
pander::pandoc.header(a, level = 2)
#create plot and print
temp5 <- ggplot(data, aes(x = !!column, fill = !!dependent)) +
geom_bar(stat = "count",
position = position_dodge()) +
labs(title = a,
x = "",
y = "") +
geom_text(aes(label = ..count..),
stat = "count",
vjust = 1.4,
size = 3,
color = "black",
position = position_dodge(.9)) +
scale_fill_brewer(palette = 1.3)+
theme(legend.title = element_blank())
print(temp5)
#create table of results
temp <- table(data[, c(a, dep)])
temp2 <- data.frame(temp)
temp3 <- pivot_wider(temp2, names_from = !!dependent, values_from = Freq)
temp3$`% Case` <- round(temp3[2]/sum(temp3[2])*100, 2)
temp3$`% Control` <- round(temp3[3]/sum(temp3[3])*100, 2)
temp3 <- temp3[, c(1,2,4,3,5)]
print(knitr::kable(temp3, caption = "Table of Frequencies"))
cat("\n")
#create table of test
temp4 <- summary(temp)
temp4 <- data.frame(temp4$statistic, temp4$parameter, temp4$p.value)
temp4$variable <- a
temp4 <- temp4[, c(4, 1, 2, 3)]
colnames(temp4) <- c("Variable", "Statistic", "Parameter", "p.value")
print(knitr::kable(temp4, caption = "Chi square test of independence"))
cat("\n")
#texto hipótesis
cat("H0: ", dep, "and",  a, "are independent  \n")
cat("H1: ", dep, "and",  a, "are not independent  \n")
#if the p value is less or equal than 0.05
if (temp4$p.value <= 0.05) {
cat("Result: Reject H0. With 95% of confidence it could be affirmed that", dep, "and", a, "are not independent  \n")
} else {
cat("Result: Accept H0. With 95% of confidence it could be affirmed that", dep, "and", a, "are independent  \n")
}
} else {
a <- colnames(data)[i]
#create symbols to use in the ggplots
column <- sym(a)
#header
pander::pandoc.header(a, level = 2)
#print plot
temp6 <- ggplot(data, aes(y = !!column, x = !!dependent)) +
geom_boxplot() +
labs(title = a,
x = "",
y = "") +
scale_fill_brewer(palette = 1.3)
print(temp6)
#univariate logit
temp_logit <- glm(data = data,
formula = factor(data[, length(data)]) ~ data[, i],
family = "binomial")
temp_logit1 <- summary(temp_logit)
print(knitr::kable(data.frame(temp_logit1$coefficients), caption = "Results of univariate logit"))
cat('\n')
temp_logit2 <- data.frame(exp(cbind(OR = coef(temp_logit), confint(temp_logit))))
print(knitr::kable(temp_logit2, caption = "Odds Ratio"))
cat("\n")
#hypothesis txt
cat("H0: The coefficient of", dep, "is zero  \n")
cat("H1: The coefficient of", dep, "is not zero  \n")
#if the p value is less or equal than 0.05
if (coef(summary(temp_logit))[,'Pr(>|z|)'][2] <= 0.05) {
cat("Result: Reject H0. With 95% of confidence it could be affirmed that the coefficient of", dep, "is not zero  \n")
} else {
cat("Result: Accept H0. With 95% of confidence it could be affirmed that the coefficient of", dep, "is zero  \n")
}
}
}
colnames(data)
data <- readRDS("forAnalysis/data2.Rdata")
colnames(data)
data <- data[, c(17, 19:28, 40:44)]
data <- readRDS("forAnalysis/data2.Rdata")
#as factors
data[, ] <- apply(data[, ], 2, function(x) as.factor(x))
str(data)
#as numeric
numeric <- colnames(data[, c("P101", "P104_SUP_ha")])
data[, numeric] <- apply(data[, numeric], 2, function(x) as.numeric(x))
#limitar a los peque??os y medianos agricultores (menos de 50ha)
data <- data[data$P104_SUP_ha<=50, ]
colnames(data)
data <- data[, c(17, 19:28, 40:44)]
#name of the dependent variable
dep <- colnames(data)[length(data)]
#symbol of dependent variable to put into a function as an object
dependent <- sym(dep)
for (i in 1:(length(data)-1)) {
if (class(data[, i]) == "character"){
#each independent variable will be call a
a <- colnames(data)[i]
#create symbols to use in the ggplots
column <- sym(a)
#create first level header for each independent variable
pander::pandoc.header(a, level = 2)
#create plot and print
temp5 <- ggplot(data, aes(x = !!column, fill = !!dependent)) +
geom_bar(stat = "count",
position = position_dodge()) +
labs(title = a,
x = "",
y = "") +
geom_text(aes(label = ..count..),
stat = "count",
vjust = 1.4,
size = 3,
color = "black",
position = position_dodge(.9)) +
scale_fill_brewer(palette = 1.3)+
theme(legend.title = element_blank())
print(temp5)
#create table of results
temp <- table(data[, c(a, dep)])
temp2 <- data.frame(temp)
temp3 <- pivot_wider(temp2, names_from = !!dependent, values_from = Freq)
temp3$`% Case` <- round(temp3[2]/sum(temp3[2])*100, 2)
temp3$`% Control` <- round(temp3[3]/sum(temp3[3])*100, 2)
temp3 <- temp3[, c(1,2,4,3,5)]
print(knitr::kable(temp3, caption = "Table of Frequencies"))
cat("\n")
#create table of test
temp4 <- summary(temp)
temp4 <- data.frame(temp4$statistic, temp4$parameter, temp4$p.value)
temp4$variable <- a
temp4 <- temp4[, c(4, 1, 2, 3)]
colnames(temp4) <- c("Variable", "Statistic", "Parameter", "p.value")
print(knitr::kable(temp4, caption = "Chi square test of independence"))
cat("\n")
#texto hipótesis
cat("H0: ", dep, "and",  a, "are independent  \n")
cat("H1: ", dep, "and",  a, "are not independent  \n")
#if the p value is less or equal than 0.05
if (temp4$p.value <= 0.05) {
cat("Result: Reject H0. With 95% of confidence it could be affirmed that", dep, "and", a, "are not independent  \n")
} else {
cat("Result: Accept H0. With 95% of confidence it could be affirmed that", dep, "and", a, "are independent  \n")
}
} else {
a <- colnames(data)[i]
#create symbols to use in the ggplots
column <- sym(a)
#header
pander::pandoc.header(a, level = 2)
#print plot
temp6 <- ggplot(data, aes(y = !!column, x = !!dependent)) +
geom_boxplot() +
labs(title = a,
x = "",
y = "") +
scale_fill_brewer(palette = 1.3)
print(temp6)
#univariate logit
temp_logit <- glm(data = data,
formula = factor(data[, length(data)]) ~ data[, i],
family = "binomial")
temp_logit1 <- summary(temp_logit)
print(knitr::kable(data.frame(temp_logit1$coefficients), caption = "Results of univariate logit"))
cat('\n')
temp_logit2 <- data.frame(exp(cbind(OR = coef(temp_logit), confint(temp_logit))))
print(knitr::kable(temp_logit2, caption = "Odds Ratio"))
cat("\n")
#hypothesis txt
cat("H0: The coefficient of", dep, "is zero  \n")
cat("H1: The coefficient of", dep, "is not zero  \n")
#if the p value is less or equal than 0.05
if (coef(summary(temp_logit))[,'Pr(>|z|)'][2] <= 0.05) {
cat("Result: Reject H0. With 95% of confidence it could be affirmed that the coefficient of", dep, "is not zero  \n")
} else {
cat("Result: Accept H0. With 95% of confidence it could be affirmed that the coefficient of", dep, "is zero  \n")
}
}
}
table(data$credFormal)
### analysis
rm(list = ls())
library(ggplot2)
library(lmtest)
library(stargazer)
setwd("E:/Asesor??as de tesis/Econom??a/Asociatividad y servicios financieros")
data <- readRDS("forAnalysis/data2.Rdata")
theme_set(theme_bw())
#as factors
data[, ] <- apply(data[, ], 2, function(x) as.factor(x))
#as numeric
numeric <- colnames(data[, c("P101", "P104_SUP_ha")])
data[, numeric] <- apply(data[, numeric], 2, function(x) as.numeric(x))
#limitar a los peque??os y medianos agricultores (menos de 50ha)
data <- data[data$P104_SUP_ha<=50, ]
#solo creditos formales
data <- data[!data$credFormal == 2, ]
#analisis descriptivo
str(data)
#P15: idioma de la entrevista
ggplot(data, aes(P15, fill = credFormal)) +
geom_bar(position = "dodge2") +
ylab("")
table(data$P15, data$credFormal)
prop.table(table(data$P15, data$credFormal))
#P101: a??os trabajando sus tierras
ggplot(data, aes(credFormal, P101)) +
geom_boxplot()
#P102
table(data$P102_1)
#100% utilizan sus tierras para agricultura
table(data$P102_2, data$credFormal)
prop.table(table(data$P102_2))
19224/25364
#75.79% utilizan sus tierras para un fin agropecuario
table(data$P102_3)
#Todos realizaron alguna actividad sea agr??cola o pecuaria
#P104_SUP_ha
ggplot(data, aes(credFormal, P104_SUP_ha)) +
geom_boxplot()
ggsave(filename = "plots/P104_SUP_ha.png")
#prop
ggplot(data, aes(prop, fill = credFormal)) +
geom_bar(position = "dodge")+
ylab("")
ggsave(filename = "plots/prop.png")
